{"ast":null,"code":"var _jsxFileName = \"/Users/yonasvalentin/Desktop/Hovedopgave/moodboard/challange/src/VoyageProgress.tsx\",\n  _s = $RefreshSig$();\nimport styled from '@emotion/styled';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/*\nDefine some styled components using `styled` from the @emotion/styled library. \n*/\nconst Container = styled.div`\n    width: 100%;\n    max-width: 1024px;\n    margin: 0 auto;\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`;\n_c = Container;\nconst AxisContainer = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex: 1;\n`;\n_c2 = AxisContainer;\nconst Dot = styled.div`\n    width: 15px;\n    height: 15px;\n    border-radius: 100%;\n\n    :first-of-type,\n    :nth-last-of-type(2) {\n        position: relative;\n        height: 40px;\n        width: 40px;\n    }\n\n    :first-of-type::before,\n    :nth-last-of-type(2)::before {\n        position: absolute;\n        font-weight: 600;\n        bottom: -50px;\n        font-size: 24px;\n        left: 50%;\n        transform: translateX(-50%);\n    }\n\n    :first-of-type::before {\n        content: '${_ref => {\n  let {\n    portOfLoading\n  } = _ref;\n  return portOfLoading;\n}}';\n    }\n\n    :nth-last-of-type(2)::before {\n        content: '${_ref2 => {\n  let {\n    portOfDischarge\n  } = _ref2;\n  return portOfDischarge;\n}}';\n    }\n`;\n_c3 = Dot;\nconst PointerDiv = styled.div`\n    position: absolute;\n    top: -4rem;\n    left: ${_ref3 => {\n  let {\n    position\n  } = _ref3;\n  return position + '%';\n}};\n    transform: translateX(-${_ref4 => {\n  let {\n    position\n  } = _ref4;\n  return position + '%';\n}});\n`;\n_c4 = PointerDiv;\nconst VoyageProgress = _ref5 => {\n  _s();\n  let {\n    portOfLoading,\n    portOfDischarge,\n    departureTime,\n    arrivalTime\n  } = _ref5;\n  const dots = 14;\n  const [pinPosition, setPinPosition] = useState(0);\n  const [progress, setProgress] = useState(0);\n\n  /* \n  Get the current time, departure time, and arrival time as timestamps\n  and\n  Calculate the total duration of the voyage and the elapsed duration\n  */\n  const currentTime = new Date().getTime();\n  const departure = new Date(departureTime).getTime();\n  const arrival = new Date(arrivalTime).getTime();\n  const totalDuration = arrival - departure;\n  const elapsedDuration = currentTime - departure;\n\n  // Use the useEffect hook to update the position of the pointer and the progress\n  useEffect(() => {\n    // Calculate the position of the pointer as a percentage\n    const position = elapsedDuration / totalDuration * 100;\n    console.log(position);\n\n    // Calculate the progress as the number of dots that have been passed\n    const newProgress = Math.round(pinPosition / 100 * dots);\n    setPinPosition(position > 100 ? 100 : position);\n    setProgress(newProgress);\n  }, [currentTime, pinPosition, departureTime, arrivalTime]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(AxisContainer, {\n      children: [[...Array(dots)].map((dot, idx) => /*#__PURE__*/_jsxDEV(Dot, {\n        portOfLoading: portOfLoading,\n        portOfDischarge: portOfDischarge,\n        isActive: progress >= 0,\n        idx: idx,\n        style: {\n          backgroundColor: idx < progress ? '#345371' : '#E0E0E0'\n        }\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(PointerDiv, {\n        position: Math.round(pinPosition),\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          strokeWidth: \"1.5\",\n          stroke: \"currentColor\",\n          width: 50,\n          height: 50,\n          children: [/*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            d: \"M15 10.5a3 3 0 11-6 0 3 3 0 016 0z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            d: \"M19.5 10.5c0 7.142-7.5 11.25-7.5 11.25S4.5 17.642 4.5 10.5a7.5 7.5 0 1115 0z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n_s(VoyageProgress, \"i27CmHkTp1BX9fegHsC+BGaEWuY=\");\n_c5 = VoyageProgress;\nexport default VoyageProgress;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"AxisContainer\");\n$RefreshReg$(_c3, \"Dot\");\n$RefreshReg$(_c4, \"PointerDiv\");\n$RefreshReg$(_c5, \"VoyageProgress\");","map":{"version":3,"names":["styled","useEffect","useState","jsxDEV","_jsxDEV","Container","div","_c","AxisContainer","_c2","Dot","_ref","portOfLoading","_ref2","portOfDischarge","_c3","PointerDiv","_ref3","position","_ref4","_c4","VoyageProgress","_ref5","_s","departureTime","arrivalTime","dots","pinPosition","setPinPosition","progress","setProgress","currentTime","Date","getTime","departure","arrival","totalDuration","elapsedDuration","console","log","newProgress","Math","round","children","Array","map","dot","idx","isActive","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","xmlns","fill","viewBox","strokeWidth","stroke","width","height","strokeLinecap","strokeLinejoin","d","_c5","$RefreshReg$"],"sources":["/Users/yonasvalentin/Desktop/Hovedopgave/moodboard/challange/src/VoyageProgress.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { useEffect, useState } from 'react';\nimport { DotProps, VoyageProgressProps } from './types';\n\n/*\nDefine some styled components using `styled` from the @emotion/styled library. \n*/\nconst Container = styled.div`\n    width: 100%;\n    max-width: 1024px;\n    margin: 0 auto;\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`;\n\nconst AxisContainer = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex: 1;\n`;\n\nconst Dot = styled.div<DotProps>`\n    width: 15px;\n    height: 15px;\n    border-radius: 100%;\n\n    :first-of-type,\n    :nth-last-of-type(2) {\n        position: relative;\n        height: 40px;\n        width: 40px;\n    }\n\n    :first-of-type::before,\n    :nth-last-of-type(2)::before {\n        position: absolute;\n        font-weight: 600;\n        bottom: -50px;\n        font-size: 24px;\n        left: 50%;\n        transform: translateX(-50%);\n    }\n\n    :first-of-type::before {\n        content: '${({ portOfLoading }) => portOfLoading}';\n    }\n\n    :nth-last-of-type(2)::before {\n        content: '${({ portOfDischarge }) => portOfDischarge}';\n    }\n`;\n\nconst PointerDiv = styled.div<{ position: number }>`\n    position: absolute;\n    top: -4rem;\n    left: ${({ position }) => position + '%'};\n    transform: translateX(-${({ position }) => position + '%'});\n`;\n\nconst VoyageProgress: React.FC<VoyageProgressProps> = ({\n    portOfLoading,\n    portOfDischarge,\n    departureTime,\n    arrivalTime,\n}) => {\n    const dots = 14;\n    const [pinPosition, setPinPosition] = useState(0);\n    const [progress, setProgress] = useState(0);\n\n    /* \n    Get the current time, departure time, and arrival time as timestamps\n    and\n    Calculate the total duration of the voyage and the elapsed duration\n  */\n    const currentTime = new Date().getTime();\n    const departure = new Date(departureTime).getTime();\n    const arrival = new Date(arrivalTime).getTime();\n    const totalDuration = arrival - departure;\n    const elapsedDuration = currentTime - departure;\n\n    // Use the useEffect hook to update the position of the pointer and the progress\n    useEffect(() => {\n        // Calculate the position of the pointer as a percentage\n        const position = (elapsedDuration / totalDuration) * 100;\n\n        console.log(position);\n\n        // Calculate the progress as the number of dots that have been passed\n        const newProgress = Math.round((pinPosition / 100) * dots);\n\n        setPinPosition(position > 100 ? 100 : position);\n        setProgress(newProgress);\n    }, [currentTime, pinPosition, departureTime, arrivalTime]);\n\n    return (\n        <Container>\n            <AxisContainer>\n                {[...Array(dots)].map((dot, idx) => (\n                    <Dot\n                        key={idx}\n                        portOfLoading={portOfLoading}\n                        portOfDischarge={portOfDischarge}\n                        isActive={progress >= 0}\n                        idx={idx}\n                        style={{\n                            backgroundColor:\n                                idx < progress ? '#345371' : '#E0E0E0',\n                        }}\n                    />\n                ))}\n\n                <PointerDiv position={Math.round(pinPosition)}>\n                    <svg\n                        xmlns='http://www.w3.org/2000/svg'\n                        fill='none'\n                        viewBox='0 0 24 24'\n                        strokeWidth='1.5'\n                        stroke='currentColor'\n                        width={50}\n                        height={50}\n                    >\n                        <path\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            d='M15 10.5a3 3 0 11-6 0 3 3 0 016 0z'\n                        />\n                        <path\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                            d='M19.5 10.5c0 7.142-7.5 11.25-7.5 11.25S4.5 17.642 4.5 10.5a7.5 7.5 0 1115 0z'\n                        />\n                    </svg>\n                </PointerDiv>\n            </AxisContainer>\n        </Container>\n    );\n};\n\nexport default VoyageProgress;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}